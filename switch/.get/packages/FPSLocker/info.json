{
  "title": "FPSLocker",
  "author": "masagrator",
  "category": "tool",
  "version": "2.0.1",
  "url": "https://github.com/masagrator/FPSLocker",
  "license": "MIT",
  "description": "An overlay that allows to set custom FPS in retail games.",
  "details": "An overlay that with companion SaltyNX plugin NX-FPS allows to set custom FPS in Nintendo Switch retail games.\\n\\nDisclaimer: Tool is utilizing detection of graphics API to manipulate FPS and in special cases it requires using patches made per game for each version to get more than 30 FPS. You can find those patches HERE\\nMax supported yaml size is 32kB, though it can be expanded in next updates.\\n\\nRequirements:\\n* Atmosphere CFW\\n* My fork of SaltyNX, version 0.5.1+\\n* NX-FPS 1.1+\\n* Tesla environment: ovlloader + Tesla Menu\\n\\nOverlay runs in two modes:\\n\\n* When game is running\\n\\nIf game is supported by SaltyNX and you installed everything correctly, you will see menu where first line states NX-FPS plugin is running. Explanation of each line:\\n\\nInterval Mode - it's used by NVN API to set limiter to either 30 FPS (2) or 60 FPS (1 or 0 (0 means that game never bothered to set it, it can be also a sign that game is not utilizing NVN but EGL or Vulkan))\\nCustom FPS Target - it's used to lock game to certain FPS. If game is using engine proprietary FPS locks, it may not be able to unlock more than 30 FPS without additional patches.\\nBig number on the right - it shows how many frames have passed in last second for currently running game. This is to confirm that lock is working as expected.\\nIncrease/Decrease FPS target - Change FPS Target by 5. Minimum is 15 FPS, max is 60 FPS. If FPS is set above 30 FPS, it sets interval mode to 1. Otherwise it sets interval to 2.\\nDisable custom FPS target - Removes FPS Target. Since we cannot predict what interval mode is expected at this point, it is in user's discretion to manipulate FPS to bring back correct interval before disabling FPS target.\\nAdvanced settings - submenu which consists of:\\nSync Wait - this is dangerous setting that disabled in most cases will crash game (for example Witcher 3 and Breath of The Wild), but in some can bring benefit of disabling double buffer at the cost of small graphical glitches (for example Xenoblade Chronicles 3). Use it with caution.\\nConvert config to patch file - if proper config file exists for this game and version, you will get an option to convert it to patch file that will be loaded when you will run this game next time. Patch is saved to SaltySD/plugins/FPSLocker/patches/*titleid_uppercase*/*buildid_uppercase*.bin\\nDelete patch file - if proper config file exists for this game and version, you will get an option to delete patch file so it won't be loaded when you will run this game next time.\\nSave settings - save profile for currently running game that will be loaded next time by plugin on boot automatically. Don't use it if you disabled Sync Wait and you didn't test it properly that it won't cause crash. Profile is saved in SaltySD/plugins/FPSLocker/*titleid_uppercase*.dat\\n\\n* When game is not running:\\n\\nIt will list installed games (max 32) and as first option it's available \"All\" submenu.\\nInside each one you will find two options:\\n\\nDelete settings - it will delete file created by \"Save settings\" option\\nDelete patches - it will delete file created by \"Convert config to patch file\" option\\n\\nThanks to ~WerWolv for creating Tesla environment, and ~cucholix + ~Monked for tests.",
  "changelog": "2.0.1\\n\\nFixed a bug that was crashing OS when trying to disable/enable Display Sync while game not supported by SaltyNX was running.\\n\\n2.0.0\\n\\nAdd Display settings menu to change LCD refresh rate (don't put Switch to dock with changed refresh rate while game is running, otherwise there is a chance game will crash), not available for OLED model. SaltyNX 0.8.0+ is required for this menu to show. More in readme.\\nAdd support for next revision of game configs that make them smaller and move most of calculations to FPSLocker overlay itself.\\nMove from c++20 to c++23\\n\\n1.2.8a\\n\\nFix \"Set Buffering\" in games with Quadruple Buffering (f.e. Assassin's Creed Revelations - The Lost Archive)\\n\\n1.2.8\\n\\nFix retrieving BID from games using new RTLD (such as Tomb Raider I-III Remastered)\\nTo fix compability with new RTLDs fully, it is necessary to update SaltyNX to at least 0.7.2 version!\\n\\n1.2.7\\n\\nAdd support for downloading additional files from Warehouse if config file have \"Addons\" entry. Used currently only to fix compability issue in Tears of the Kingdom with atmosphere's romfs listing cache creation which allows loading romfs mods.\\n\\n1.2.6a\\n\\nFix overlay lock not working since libnx 4.5.0 release\\n\\n1.2.6\\n\\nAdd option in Advanced Settings to download config from repository Check/download config file. More in README.\\nSlightly redesign Advanced Settings UI.\\n\\n1.2.5a\\n\\nFix saving settings if \"plugins\" folder doesn't exist inside SaltySD folder.\\n\\n1.2.5\\n\\nAdd support for SaltyNX 0.7.0+\\n\\n1.2.4\\n\\nPrint titleid and buildid if no config is found\\nAllow using all available buffers when game is not using all of them.\\nFor this release to properly work it is required to update NX-FPS to version 1.5.4\\n\\n1.2.3\\n\\nAllow in games using Quadruple Buffering (for example Assassin's Creed The Ezio Collection) to force Triple Buffering.\\nWhen saving settings with different Buffering than Double, Window Sync will be reseted to Enabled.\\n\\n1.2.2\\n\\nAllow setting double buffer in games that are using triple buffer.\\nMore in README.\\n\\nNX-FPS 1.5.2+ is required\\n\\n1.1.3\\n\\nProvide better API detection.\\nNow you can see if game is using NVN, EGL or Vulkan in Advanced Settings.\\n\\nRequires updating NX-FPS to at least 1.3 version."
}